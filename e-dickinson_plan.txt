TASKS THIS WEEK:

* finish complete poems cleanup (incl. generate BOW representation of each poem, BOW representation of corpus, all without punctuation)
* create POS/NEG seed lists for initial test (from ED corpus)
* select 300 poems for test set
* run Turney to generate PMIs for test set
* annotate poems by theme, use theme lookup table to colorize plot of poems by averaged PMI score.

TWO PHASES:

1. Calculate affect scores for words (PMIs against POS/NEG seed lists), calculate affect scores for poems, use AS to characterize corpus (clustering, ED average, etc.).
2. Calculate cossim for words within ED test set, use along with cossims for words in other ED poems to determine thresholds for classifier. Once thresholds set, calculate cossim for unknown poem, classifier makes prediction as to poet using threshold scores.


AFFECT SCORES:
Affect Scores (AS) represent the affective associations of a word within a poetic corpus.
Each word gets an AS calculated from global cossim over the entire corpus.
Each poem has a dict (vector) of the global AS for each of its words.
These poem dicts can be used to calculate similarity with other individual poems,
either from ED or from another author (need to repeat AS vector generation for
their corpus first). ED's poems can be clustered according to similarity this way.
The superset of these AS vectors represent ED's "affective fingerprint." It can be
used to calculate cossim between ED and another poet.
Seed lists that are used to calculate AS need to be generated afresh for each set
of poets (by generating frequencies for affective words and selecting from top scores).
Seed lists are generated by taking frequencies over a whole corpus, then human selection.
There are three seed lists: POS_WORD, NEG_WORD, and NEUTRAL.

Trevor will generate seed lists.





OLD PLAN:
--------------
Timeline:

This week:
	- Trevor will start annotations (theme for all poems, ternaries for lines and overall for 100-500 poems)
	- Trevor will start cleaning ED dataset
	- Ian will get the other csv file ready for use
		* upload the poem into neg file
		* take equal number of e dickinson into pos file

Next Week:
	- Preliminary experiments Wed and Friday
		* Running the CNN on the pos and neg data
		* Run the affect lexicon on e dickinson (tentative)
		* Run the ternary scores and take those scores to plot poem on a plane
		  then run a K-nearest neighbors alg. to create a cluster
		* Run the affect scores and take those scores and cluster poem based on
		  affective profile
